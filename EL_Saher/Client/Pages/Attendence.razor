@page "/attendence/{CourseIdParameter:int}"
@using EL_Saher.Client.Services
@using EL_Saher.Shared
@using EL_Saher.Shared.Models.ServiceModels
@using Microsoft.AspNetCore.Authorization;
@inject IManager manager
@attribute [Authorize]

<h3 class="Title"><span class="ALetter" style="">قائمة الحضور</span></h3>

<div class="row container addAtten" style="width:80%;  justify-self:center" >
    <label class="col-3 btn" style="align-self:center; background-color:#4FC3A1; pointer-events:none ;min-height:100%;">إضافة محاضرة جديدة</label>
    <input type="number" class="col-7 input-group-text text-end" placeholder="رقم المحاضرة" @bind="sessionNumber"/>
    <a class="btn col-2 bg-danger" @onclick="@AddSession">إضافة</a>
</div>

<div class="table-wrapper">
    <table class="fl-table">
        <thead>
        <tr>
            <th>رقم الطالب</th>
            <th>إسم الطالب</th>
                @if (state)
                {
                    <th>حضور الطالب</th>
                }
        </tr>
        </thead>
        <tbody>
            @if(students==null)
            {
                <span>Loading...</span>
            }
            else
            {
                @foreach (var student in students)
			    {
                    @if (student != null)
                    {
                        <tr>
                            <td> @(student.StudentID)</td>
                            <td>@(student.Name)</td>
                             @if (state)
                            {
                                <td>
                                    @if (student.Attendances != null)
                                    {
                                        @if (student.Attendances.Last() != null)
                                        {
                                            <input type="checkbox" @bind="@(student.Attendances.Last().AttendanceStatus)" @onclick="@(() => Update(student.Attendances.Last()))" style="margin-left:5px" />
                                        }
                                    }
                                </td>
                            }
				        </tr>
                    }
			    } 
            }
        </tbody>
    </table>
</div>
@*<a class="btn bg-danger" @onclick="@UpdateAttendance"></a>*@



@code {
    private List<Student> students  { get; set; } = new List<Student>();
    public int sessionNumber { get; set; }
    private bool state { get; set; } = false;
    [Parameter]
    public int CourseIdParameter { get; set; }
    protected override async Task OnInitializedAsync()
    {
        if(CourseIdParameter==0)
            students = await manager.GetStudent();
        else
        {
            students = await manager.GetStudentsByCourse(CourseIdParameter);
        }
    }
    public async void AddSession()
    {
        foreach (var student in students)
        {
            AttendanceInfo attendance = new AttendanceInfo()
                {
                    AttendanceStatus = false,
                    SessionNumber = sessionNumber,
                    StudentId = student.StudentID
                };
            await manager.AddAttendance(attendance);
        }
        state = true;
        await OnInitializedAsync();
        StateHasChanged();
    }
    public async void Update(CourseAttendance courseAttendance)
    {
        AttendanceInfo attendance = new AttendanceInfo()
            {
                SessionNumber = courseAttendance.SessionNumber,
                AttendanceStatus = !(courseAttendance.AttendanceStatus),
                StudentId = courseAttendance.StudentId
            };
        await manager.UpdateAtten(attendance, courseAttendance.CourseAttendanceId);
    }

}
